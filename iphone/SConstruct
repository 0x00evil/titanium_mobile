#!/usr/bin/env python
#
# Scons script for building the iphone library
#
import os,platform,sys

# add your module here for it to get compiled into
# the library
modules = [	'api',
			'app',
			'ui',
			'database',
			'accelerometer',
			'geolocation',
			'media',
			'filesystem',
			'network',
			'platform',
            'analytics',
			'gesture']

try:
	# pull in the version from the top-level SConstruct
	Import('version')
except:
	if ARGUMENTS.get('PRODUCT_VERSION', 0):
		version = ARGUMENTS['PRODUCT_VERSION']
	else:
		version = '0.0.0'

defines='TI_VERSION=%s ' % version

for api in modules:
	defines+="MODULE_TI_%s=1 " % (api.upper())


config = 'Release'



iphone_dir = os.path.abspath(os.path.join(os.path.dirname(sys._getframe(0).f_code.co_filename),'../','support','iphone'))
sys.path.append(iphone_dir)

import run,prereq

for apiversion in prereq.get_sdks():
    # execute the phone and simulator release builds

    if os.path.exists('/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS%s.sdk' % apiversion):
    	os.system("xcodebuild -sdk iphoneos%s -project Titanium.xcodeproj -target libTitanium -configuration %s GCC_PREPROCESSOR_DEFINITIONS='%s' clean build" % (apiversion,config,defines))

    if os.path.exists('/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator%s.sdk' % apiversion):
    	os.system("xcodebuild -sdk iphonesimulator%s -project Titanium.xcodeproj -target libTitanium -configuration %s GCC_PREPROCESSOR_DEFINITIONS='%s' clean build" % (apiversion,config,defines))
	

    # build the merged library using lipo
    os.system("lipo build/%s-iphonesimulator/libTitanium.a build/%s-iphoneos/libTitanium.a -create -output build/libTitanium-%s.a" %(config,config,apiversion))


