- namespace

Titanium.UI.Picker

- type

object

- subtype

proxy

- description

A Picker is created by the method [Titanium.UI.createPicker](Titanium.UI.createPicker).  A Picker can be used to select one or more fixed values.

- since

0.8

- platforms

android, iphone

- properties

columns[array]: array of column values
type[int]: the type constant for the picker. One of `Titanium.UI.PICKER_TYPE_PLAIN` (default), `Titanium.UI.PICKER_TYPE_DATE_AND_TIME`, `Titanium.UI.PICKER_TYPE_DATE`, `Titanium.UI.PICKER_TYPE_TIME` or `Titanium.UI.PICKER_TYPE_COUNT_DOWN_TIMER`.
selectionIndicator[boolean]: for basic picker, boolean value to indicate whether the visual selection style is shown. On the iPhone, this is a blue selected bar.
minDate[date]: the minimum Date/Time for value for date pickers
maxDate[date]:the maximum Date/Time for value for date pickers
value[date]: the Date/Time value for date pickers
countDownDuration[double]: the duration value in milliseconds for count down timer pickers
locale[string]: the locale used for displaying Date/Time pickers values
minuteInterval[int]: property to set the interval displayed by the minutes wheel (for example, 15 minutes). The interval value must be evenly divided into 60; if it is not, the default value is used. The default and minimum values are 1; the maximum value is 30.


- methods

add: add an array of rows, a single row or a column to the picker
reloadColumn: causes the picker to reload the values from the new column
getSelectedRow: get the selected row object for column
setSelectedRow: set the column's row to the selected state

- method : getSelectedRow, object

index[int]: for the column index, return the row object or nil if not found

- method : setSelectedRow

column[int]: the column index
row[int]: the row index
animated[boolean]: boolean to indicate if the selection should be animated (default)

- method : add

data[array,object]: add an array of rows, a single row or a column to the picker

- method : reloadColumn

column[object]: new column to load

- events

change: fired when the value of a picker row and/or column changes

- event : change

selectedValue: the array of selected values
rowIndex: the selected row index
columnIndex: the selected column index
column: the column object
row: the row object

- example : Basic Single Column Picker

In this basic picker example, we create a one column picker with 4 rows. 

<code>
var picker = Ti.UI.createPicker();

var data = [];
data[0]=Ti.UI.createPickerRow({title:'Bananas',custom_item:'b'});
data[1]=Ti.UI.createPickerRow({title:'Strawberries',custom_item:'s'});
data[2]=Ti.UI.createPickerRow({title:'Mangos',custom_item:'m'});
data[3]=Ti.UI.createPickerRow({title:'Grapes',custom_item:'g'});

picker.add(data);
</code>

- notes

In iPhone 1.0, only basic pickers are supported. However, `Date`, `Time` and `DateTime` pickers will be supported in a point release just after 1.0.

Android does not support the `DateTime` picker type.

